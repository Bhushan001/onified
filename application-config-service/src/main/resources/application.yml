# Use APP_CONFIG_PORT from environment, default to 9082
server:
  port: ${APP_CONFIG_PORT:9082}

spring:
  config:
    import: optional:.env[.properties]
  application:
    name: application-config-service
  datasource:
    url: ${APP_CONFIG_DB_URL:jdbc:postgresql://localhost:5432/application_config_db}
    username: ${APP_CONFIG_DB_USERNAME:postgres}
    password: ${APP_CONFIG_DB_PASSWORD:root}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    disable-swagger-default-url: true
    display-request-duration: true
    try-it-out-enabled: true
    filter: true
  packages-to-scan: com.onified.ai.appConfig.controller
  paths-to-match: /api/**

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.springframework.web: DEBUG
    org.springframework.jdbc.core: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    com.onified.appconfig: DEBUG
    # Add logging for SpringDoc
    org.springdoc: DEBUG
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  file:
    name: ${LOG_DIR:-/app/logs}/application-config-service.log

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

# Eureka Client Configuration
eureka:
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    health-check-url-path: /actuator/health
  client:
    enabled: ${EUREKA_ENABLED:true}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
    register-with-eureka: ${EUREKA_ENABLED:true}
    fetch-registry: ${EUREKA_ENABLED:true}
