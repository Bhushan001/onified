version: '3.8'

services:
  # Single Postgres instance for all services
  # postgres:
  #   image: postgres:15
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:-onified}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-onified}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./configs/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-onified}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Eureka Server
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -sf http://localhost:8761/actuator/health | grep '\"status\":\"UP\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://host.docker.internal:5432/${KEYCLOAK_DB:-keycloak_db}
      KC_DB_USERNAME: ${POSTGRES_USER:-onified}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-onified}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    ports:
      - "${KEYCLOAK_PORT:-9090}:8080"
    command: start-dev
    healthcheck:
      test: ["CMD-SHELL", "echo > /dev/tcp/localhost/8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # API Gateway
  onified-gateway:
    build: ./onified-gateway
    container_name: onified-gateway
    ports:
      - "${GATEWAY_PORT:-9080}:9080"
    environment:
      LOG_DIR: ${GATEWAY_LOG_DIR:-/app/logs}
    volumes:
      - ${GATEWAY_LOG_DIR:-./logs/gateway}:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -sf http://localhost:9080/actuator/health | grep '\"status\":\"UP\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Platform Management Service
  platform-management-service:
    build: ./platform-management-service
    container_name: platform-management-service
    ports:
      - "${PLATFORM_MGMT_PORT:-9081}:9081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/${PLATFORM_MGMT_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      LOG_DIR: ${PLATFORM_MGMT_LOG_DIR:-/app/logs}
    volumes:
      - ${PLATFORM_MGMT_LOG_DIR:-./logs/platform-management}:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      onified-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -sf http://localhost:9081/actuator/health | grep '\"status\":\"UP\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Angular Frontend
  onified-frontend:
    build: ./web
    container_name: onified-frontend
    ports:
      - "${FRONTEND_PORT:-4200}:80"
    environment:
      NODE_ENV: production
      LOG_DIR: ${FRONTEND_LOG_DIR:-/app/logs}
    volumes:
      - ${FRONTEND_LOG_DIR:-./logs/frontend}:/app/logs
    depends_on:
      onified-gateway:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo > /dev/tcp/localhost/80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
