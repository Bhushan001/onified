version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Eureka Server
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -sf http://localhost:8761/actuator/health | grep '\"status\":\"UP\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    volumes:
      - ./logs/eureka-server:/app/logs

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://host.docker.internal:5432/${KEYCLOAK_DB:-keycloak_db}
      KC_DB_USERNAME: ${POSTGRES_USER:-postgres}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-root}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    ports:
      - "${KEYCLOAK_PORT:-9090}:8080"
    command: start-dev
    healthcheck:
      test: ["CMD-SHELL", "echo > /dev/tcp/localhost/8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # API Gateway
  onified-gateway:
    build: ./onified-gateway
    container_name: onified-gateway
    ports:
      - "${GATEWAY_PORT:-9080}:9080"
    environment:
      LOG_DIR: ${GATEWAY_LOG_DIR:-/app/logs}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_ENABLED: true
      SPRING_APPLICATION_NAME: onified-gateway
    volumes:
      - ./logs/onified-gateway:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -sf http://localhost:9080/actuator/health | grep '\"status\":\"UP\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Platform Management Service
  platform-management-service:
    build: ./platform-management-service
    container_name: platform-management-service
    ports:
      - "${PLATFORM_MGMT_PORT:-9081}:9081"
    environment:
      PLATFORM_MGMT_DB_URL: ${PLATFORM_MGMT_DB_URL}
      PLATFORM_MGMT_DB_USERNAME: ${PLATFORM_MGMT_DB_USERNAME}
      PLATFORM_MGMT_DB_PASSWORD: ${PLATFORM_MGMT_DB_PASSWORD}
      LOG_DIR: ${PLATFORM_MGMT_LOG_DIR:-/app/logs}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_ENABLED: true
      SPRING_APPLICATION_NAME: platform-management-service
    volumes:
      - ./logs/platform-management-service:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      onified-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "apk add --no-cache curl >/dev/null 2>&1 || true; curl -sf http://localhost:9081/actuator/health | grep '\"status\":\"UP\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Angular Frontend
  onified-frontend:
    build: ./web
    container_name: onified-frontend
    ports:
      - "${FRONTEND_PORT:-4200}:80"
    environment:
      NODE_ENV: production
      LOG_DIR: ${FRONTEND_LOG_DIR:-/app/logs}
    volumes:
      - ${FRONTEND_LOG_DIR:-./logs/frontend}:/app/logs
    depends_on:
      onified-gateway:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo > /dev/tcp/localhost/80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  authentication-service:
    build: ./authentication-service
    container_name: authentication-service
    ports:
      - "${AUTH_PORT:-9083}:9083"
    environment:
      SPRING_APPLICATION_NAME: authentication-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_ENABLED: true
      LOG_DIR: ${AUTH_LOG_DIR:-./logs/authentication}
      AUTH_DB_URL: ${AUTH_DB_URL}
      AUTH_DB_USERNAME: ${AUTH_DB_USERNAME}
      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
    volumes:
      - ./logs/authentication-service:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  user-management-service:
    build: ./user-management-service
    container_name: user-management-service
    ports:
      - "${USER_MGMT_PORT:-9085}:9085"
    environment:
      SPRING_APPLICATION_NAME: user-management-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_ENABLED: true
      LOG_DIR: ${USER_MGMT_LOG_DIR:-./logs/user-management}
      USER_MGMT_DB_URL: ${USER_MGMT_DB_URL}
      USER_MGMT_DB_USERNAME: ${USER_MGMT_DB_USERNAME}
      USER_MGMT_DB_PASSWORD: ${USER_MGMT_DB_PASSWORD}
    volumes:
      - ./logs/user-management-service:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  permission-registry-service:
    build: ./permission-registry-service
    container_name: permission-registry-service
    ports:
      - "${PERMISSION_REGISTRY_PORT:-9084}:9084"
    environment:
      SPRING_APPLICATION_NAME: permission-registry-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_ENABLED: true
      LOG_DIR: ${PERMISSION_REGISTRY_LOG_DIR:-./logs/permission-registry}
      PERMISSION_DB_URL: ${PERMISSION_DB_URL}
      PERMISSION_DB_USERNAME: ${PERMISSION_DB_USERNAME}
      PERMISSION_DB_PASSWORD: ${PERMISSION_DB_PASSWORD}
    volumes:
      - ./logs/permission-registry-service:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  application-config-service:
    build: ./application-config-service
    container_name: application-config-service
    ports:
      - "${APP_CONFIG_PORT:-9082}:9082"
    environment:
      SPRING_APPLICATION_NAME: application-config-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_ENABLED: true
      LOG_DIR: ${APP_CONFIG_LOG_DIR:-./logs/application-config}
      APP_CONFIG_DB_URL: ${APP_CONFIG_DB_URL}
      APP_CONFIG_DB_USERNAME: ${APP_CONFIG_DB_USERNAME}
      APP_CONFIG_DB_PASSWORD: ${APP_CONFIG_DB_PASSWORD}
    volumes:
      - ./logs/application-config-service:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  tenant-management-service:
    build: ./tenant-management-service
    container_name: tenant-management-service
    ports:
      - "${TENANT_MGMT_PORT:-9086}:9086"
    environment:
      SPRING_APPLICATION_NAME: tenant-management-service
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_ENABLED: true
      LOG_DIR: ${TENANT_MGMT_LOG_DIR:-./logs/tenant-management}
      TENANT_MGMT_DB_URL: ${TENANT_MGMT_DB_URL}
      TENANT_MGMT_DB_USERNAME: ${TENANT_MGMT_DB_USERNAME}
      TENANT_MGMT_DB_PASSWORD: ${TENANT_MGMT_DB_PASSWORD}
    volumes:
      - ./logs/tenant-management-service:/app/logs
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
