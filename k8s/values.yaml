# Onified Platform Kubernetes Configuration Values

# Global settings
global:
  namespace: onified
  imageRegistry: "your-registry.com"
  imagePullPolicy: IfNotPresent
  imageTag: "latest"

# PostgreSQL Configuration
postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "15"
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
  auth:
    username: postgres
    password: root
    database: postgres
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Keycloak Configuration
keycloak:
  enabled: true
  image:
    repository: quay.io/keycloak/keycloak
    tag: "24.0.2"
  auth:
    adminUser: admin
    adminPassword: admin123
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# API Gateway Configuration (using Kubernetes service discovery)
gateway:
  enabled: true
  image:
    repository: onified/gateway
    tag: "latest"
  replicas: 2
  # Kubernetes service discovery configuration
  serviceDiscovery:
    enabled: false  # Disable Eureka
    kubernetes:
      enabled: true  # Use Kubernetes native service discovery
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# Platform Management Service Configuration
platformManagement:
  enabled: true
  image:
    repository: onified/platform-management
    tag: "latest"
  replicas: 2
  # Kubernetes service discovery configuration
  serviceDiscovery:
    enabled: false  # Disable Eureka
    kubernetes:
      enabled: true  # Use Kubernetes native service discovery
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# User Management Service Configuration
userManagement:
  enabled: true
  image:
    repository: onified/user-management
    tag: "latest"
  replicas: 2
  # Kubernetes service discovery configuration
  serviceDiscovery:
    enabled: false  # Disable Eureka
    kubernetes:
      enabled: true  # Use Kubernetes native service discovery
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# Tenant Management Service Configuration
tenantManagement:
  enabled: true
  image:
    repository: onified/tenant-management
    tag: "latest"
  replicas: 2
  # Kubernetes service discovery configuration
  serviceDiscovery:
    enabled: false  # Disable Eureka
    kubernetes:
      enabled: true  # Use Kubernetes native service discovery
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# Permission Registry Service Configuration
permissionRegistry:
  enabled: true
  image:
    repository: onified/permission-registry
    tag: "latest"
  replicas: 2
  # Kubernetes service discovery configuration
  serviceDiscovery:
    enabled: false  # Disable Eureka
    kubernetes:
      enabled: true  # Use Kubernetes native service discovery
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# Application Config Service Configuration
applicationConfig:
  enabled: true
  image:
    repository: onified/application-config
    tag: "latest"
  replicas: 2
  # Kubernetes service discovery configuration
  serviceDiscovery:
    enabled: false  # Disable Eureka
    kubernetes:
      enabled: true  # Use Kubernetes native service discovery
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# Authentication Service Configuration
authentication:
  enabled: true
  image:
    repository: onified/authentication
    tag: "latest"
  replicas: 2
  # Kubernetes service discovery configuration
  serviceDiscovery:
    enabled: false  # Disable Eureka
    kubernetes:
      enabled: true  # Use Kubernetes native service discovery
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

# Frontend Configuration
frontend:
  enabled: true
  image:
    repository: onified/frontend
    tag: "latest"
  replicas: 2
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  host: onified.local
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"

# Monitoring Configuration
monitoring:
  enabled: false
  prometheus:
    enabled: false
  grafana:
    enabled: false

# Security Configuration
security:
  networkPolicies:
    enabled: false
  rbac:
    enabled: true
  secrets:
    enabled: true

# Database Configuration
database:
  platformMgmt:
    url: "jdbc:postgresql://postgres:5432/platform_mgmt_db"
    username: "postgres"
    password: "root"
  tenantManagement:
    url: "jdbc:postgresql://postgres:5432/tenant_management_db"
    username: "postgres"
    password: "root"
  userManagement:
    url: "jdbc:postgresql://postgres:5432/user_management_db"
    username: "postgres"
    password: "root"
  permissionRegistry:
    url: "jdbc:postgresql://postgres:5432/permission_registry_db"
    username: "postgres"
    password: "root"
  applicationConfig:
    url: "jdbc:postgresql://postgres:5432/application_config_db"
    username: "postgres"
    password: "root"
  authentication:
    url: "jdbc:postgresql://postgres:5432/authentication_db"
    username: "postgres"
    password: "root"
  keycloak:
    url: "jdbc:postgresql://postgres:5432/keycloak_db"
    username: "postgres"
    password: "root" 