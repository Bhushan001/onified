@use 'sass:map';

// Breakpoint definitions
$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
) !default;

// Media query mixins
@mixin media-up($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    $value: map.get($breakpoints, $breakpoint);
    @if $value > 0 {
      @media (min-width: $value) {
        @content;
      }
    } @else {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

@mixin media-down($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    $value: map.get($breakpoints, $breakpoint);
    @if $value > 0 {
      @media (max-width: $value - 1px) {
        @content;
      }
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

@mixin media-between($lower, $upper) {
  @if map.has-key($breakpoints, $lower) and map.has-key($breakpoints, $upper) {
    $lower-value: map.get($breakpoints, $lower);
    $upper-value: map.get($breakpoints, $upper);
    
    @media (min-width: $lower-value) and (max-width: $upper-value - 1px) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$lower} or #{$upper}";
  }
}

// Container mixins
@mixin container {
  width: 100%;
  margin: 0 auto;
  padding: 0 1rem;
  
  @include media-up(sm) {
    max-width: 540px;
  }
  
  @include media-up(md) {
    max-width: 720px;
  }
  
  @include media-up(lg) {
    max-width: 960px;
  }
  
  @include media-up(xl) {
    max-width: 1140px;
  }
  
  @include media-up(xxl) {
    max-width: 1320px;
  }
}